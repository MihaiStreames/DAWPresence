[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"


[tool.setuptools]
packages = ["DAWPY"]


[project]
name = "DAWPresence"
version = "0.1.0"
dependencies = [
    "PyQt5>=5.15.11",
    "pypresence>=4.3.0",
    "psutil>=7.1.0",
    'pywin32>=311; sys_platform == "win32"',
    "setuptools>=80.9.0",
    "loguru>=0.7.3"
]



# ========== BLACK (Formatter) ==========
[tool.black]
line-length = 100
target-version = ["py313"]
skip-string-normalization = false

# ========== RUFF (Linter & Formatter) ==========
[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "I",    # isort
    "B",    # flake8-bugbear
    "C",    # complexity
    "Q",    # flake8-quotes
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "S",    # bandit (security)
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "DTZ",  # flake8-datetimez
    "ERA",  # eradicate (commented code)
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "FLY",  # flynt (f-string conversion)
    "PIE",  # flake8-pie
    "COM",  # flake8-commas
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "RSE",  # flake8-raise
    "RUF",  # ruff-specific rules
]

ignore = [
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D400",    # First line should end with a period
    "D203",    # 1 blank line required before class docstring
    "D213",    # Multi-line docstring summary should start at the second line
    "E501",    # Line too long
    "COM812",  # Trailing comma missing
    "ISC001",  # Implicitly concatenated string literals
    "D415",    # First line should end with a period, question mark, or exclamation point
    "N802",    # Function name should be lowercase
    "N806",    # Variable in function should be lowercase
    "D107",    # Missing docstring in __init__
    "T201",    # print found (using this in main)
    "INP001",  # Implicit namespace packages
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = ["DAWPY"]
combine-as-imports = true
force-wrap-aliases = true
split-on-trailing-comma = true